ПЕРЕХВАТ ОШИБОК

try
{

}
catch (Exception ex)
{
	editMessage(step, null, FAILED, "Произошла ошибка: " + ex.Message + Environment.NewLine + Environment.NewLine + "Полное описание ошибка: " + ex.ToString(), IMAGE_STATUS_FAILED);
	testStop = true;
}

try
{

}
catch (Exception ex)
{
	consoleMsg("Ошибка: " + ex.ToString());
}

------------------------------------------------------------------------

private async void Form1_Load(object sender, EventArgs e)
{
	await this.webView21.EnsureCoreWebView2Async();
}
private async void button1_Click(object sender, EventArgs e)
{
	var result = await webView21.ExecuteScriptAsync("Math.sin(Math.PI/2)");
	MessageBox.Show(result);
}

-----------------------------------------------------------------------------

webView21.ExecuteScriptAsync("document.getElementsByClassName('return ussd_send()').click();");
webView21.ExecuteScriptAsync("document.getElementsByName('send')[0].click();");

document.getElementById
document.getElementsByClassName
document.getElementsByName
document.getElementsByTagName
document.getElementsByTagNameNS
document.querySelector
document.querySelectorAll
document.documentElement
document.documentURI


string inputButtonValue = "Send";
var func = $"document.querySelectorAll('input[value="{inputButtonValue}"]')[0].click();";
var result = await webView21.CoreWebView2.ExecuteScriptAsync(func);

-----------------------------------------------------------------------------

СПРАВОЧНИК https://somov-qa.github.io/library/webdev/index.html
ОБЪЕКТ: https://www.w3schools.com/jsref/dom_obj_all.asp


document.querySelector('#buttonLogin');
document.querySelectorAll('#buttonLogin');

const orgObject = { company: 'ABC Corp' }

(function(){
   var button = document.getElementById('mybutton');
   button.addEventListener('click', function(){
       alert('CLICK!');
   });
}());

(function(){ var element = document.querySelector('#buttonLogin'); return element; }());

-----------------------------------------------------------------------------

ПРИМЕРЫ

var result = await browserView.CoreWebView2.ExecuteScriptAsync("document.querySelector('#buttonLogin123');");
var result = await browserView.CoreWebView2.ExecuteScriptAsync("(function(){ var element = document.querySelector('#buttonLogin'); return element; }());");
var result = await browserView.CoreWebView2.ExecuteScriptAsync("(function(){ var element = { id: 'id_button', name: 'name_button' }; return element; }());");
var result = await browserView.CoreWebView2.ExecuteScriptAsync("(function(){ var element = document.querySelector('#buttonLogin'); return element.outerHTML; }());");
var result = await browserView.CoreWebView2.ExecuteScriptAsync("(function(){ var element = document.querySelector('#buttonLogin'); return element.innerText; }());");
var result = await browserView.CoreWebView2.ExecuteScriptAsync("(function(){ var element = document.querySelector('#buttonLogin'); return element.innerHTML; }());");

var result = await browserView.CoreWebView2.ExecuteScriptAsync("(function(){ var element = document.querySelector('#buttonLogin'); var obj = { id: element.id, name: element.name }; return obj; }());");
var result = await browserView.CoreWebView2.ExecuteScriptAsync("(function(locatorCss = '"+locator+"'){ var element = document.querySelector('#buttonLogin'); var obj = { locator: locatorCss, id: element.id, name: element.name }; return obj; }());");

var el = document.getElementById('login');
el.value = "test";

Тестирование Зионек
9999999999

(function(){ var element = document.getElementById('popup_name'); element.value = 'Тестирование Зионек'; return element.value; }());
(function(){ var element = document.getElementById('popup_phone'); element.value = '9999999999'; return element.value; }());
(function(){ var element = document.getElementById('SUBMIT_ORDER'); element.click(); return element; }());

document.getElementById('popup_name').value = 'Тестирование Зионек';
document.getElementById('popup_name').innerText = 'Тестирование Зионек';
document.getElementById('popup_phone').value = '9999999999';
document.getElementById('popup_phone').innerText = '9999999999';
document.getElementById('SUBMIT_ORDER').click();


document.getElementById('popup_name').setAttribute('value', 'Тестирование Зионек');
document.getElementById('popup_name').value = 'Тестирование Зионек';
document.getElementById('popup_phone').setAttribute('value', '9999999999');
document.getElementById('popup_phone').value = '9999999999';
document.getElementById('SUBMIT_ORDER').click();

document.getElementById('popup_name').setAttribute('value', 'Тестирование Зионек');
document.getElementById('popup_name').innerHTML = 'Тестирование Зионек';
document.getElementById('popup_phone').setAttribute('value', '9999999999');
document.getElementById('popup_phone').innerHTML = '9999999999';
document.getElementById('SUBMIT_ORDER').click();

document.getElementById("popup_name").remove();
document.getElementById("popup_phone").remove();
document.getElementById("SUBMIT_ORDER").remove();
document.getElementsByTagName('form')[4].createElement('<input id="popup_name" name="FIO">');
document.getElementsByTagName('form')[4].createElement('<input id="popup_phone" name="PHONE">');
document.querySelector('#popup > div > div.popup_col.popup_content.main_order_body > form > p').createElement('<button id="BUTTON_TEST">Test</button>');
document.getElementById('BUTTON_TEST').click();

var newEl = document.createElement("div")
document.body.appendChild(newEl)

document.getElementById("popup_name").innerHTML = '<input id="popup_name" name="FIO" value="Тестирование Зионек">';
document.getElementById("popup_phone").innerHTML = '<input id="popup_phone" name="PHONE" value="9999999999">';
document.getElementById('SUBMIT_ORDER').innerHTML = '<button id="SUBMIT_ORDER">Подключить</button>';
document.getElementById('SUBMIT_ORDER').click();

document.getElementsByClassName('popup_input-block')[4].innerHTML = '<input id="popup_name" name="FIO" value="Тестирование Зионек">';
document.getElementsByClassName('popup_input-block')[5].innerHTML = '<input id="popup_phone" name="PHONE" value="9999999999">';
document.getElementById('SUBMIT_ORDER').click();


document.getElementById('popup_name').focus();
document.getElementById('popup_name').value = 'Тестирование Зионек';
document.getElementById('popup_phone').focus();
document.getElementById('popup_phone').value = '9999999999';
document.getElementById('SUBMIT_ORDER').click();

document.getElementById('popup_name').blur();
document.getElementById('popup_name').setAttribute('disabled', '');
document.getElementById('popup_name').value = 'Тестирование Зионек';
document.getElementById('popup_phone').blur();
document.getElementById('popup_phone').setAttribute('disabled', '');
document.getElementById('popup_phone').value = '9999999999';
document.getElementById('SUBMIT_ORDER').click();

РЕШЕНИЕ ПРОБЛЕМЫ (прападали данные из input после нажатия на кнопку) https://learn.javascript.ru/dispatch-events

input = document.querySelector('#popup_phone');
input.value = '9999999999';
input.dispatchEvent(new KeyboardEvent('keydown', { bubbles: true }));
input.dispatchEvent(new KeyboardEvent('keypress', { bubbles: true }));
input.dispatchEvent(new KeyboardEvent('keyup', { bubbles: true }));
input.dispatchEvent(new Event('input', { bubbles: true }));
input.dispatchEvent(new Event('change', { bubbles: true }));

input = document.querySelector('#popup_name');
input.value = 'Тестирование Зионек';
input.dispatchEvent(new KeyboardEvent('keydown', { bubbles: true }));
input.dispatchEvent(new KeyboardEvent('keypress', { bubbles: true }));
input.dispatchEvent(new KeyboardEvent('keyup', { bubbles: true }));
input.dispatchEvent(new Event('input', { bubbles: true }));
input.dispatchEvent(new Event('change', { bubbles: true }));

document.getElementById('SUBMIT_ORDER').click();

-----------------------------------------------------------------------------

получить события из браузера
(function(){
var performance = window.performance || window.mozPerformance || window.msPerformance || window.webkitPerformance || {};
var network = performance.getEntriesByType('resource') || {};
var result = JSON.stringify(network);
return result;
}());

-----------------------------------------------------------------------------

ПРИМЕРЫ АВТОТЕСТОВ

Tester tester = new Tester(Config.browserForm);
await tester.TestBeginAsync();
await tester.BrowserSizeAsync(800, 600);
await tester.GoToUrlAsync("https://somovstudio.github.io/test.html", 5);
await tester.FindVisibleElementByIdAsync("result", 5);
await tester.SetValueInElementByIdAsync("login", "admin");
await tester.WaitAsync(2);
await tester.SetValueInElementByIdAsync("pass", "0000");
await tester.WaitAsync(2);
await tester.ClickElementByIdAsync("buttonLogin");
await tester.WaitAsync(2);
string actual = await tester.GetValueFromElementByIdAsync("textarea");
string expected = "\"PASSED\"";
await tester.FindVisibleElementByIdAsync("result", 5);
await tester.WaitVisibleElementByIdAsync("result", 5);
await tester.AssertEqualsAsync(expected, actual);
await tester.TestEndAsync();


Tester tester = new Tester(Config.browserForm);
await tester.TestBegin();
await tester.GoToUrl("https://somovstudio.github.io/test.html", 5);
await tester.Wait(2);
await tester.GetURL();
HTMLElement element = await tester.GetHtmlElement("#buttonLogin");
await tester.Wait(2);
Config.browserForm.consoleMsg(element.Locator + " | " + element.Id + " | " + element.Name + " | " + element.Class + " | " + element.Value);
await element.Click();
await tester.Wait(2);
await tester.TestEnd();

HatFrameworkDev.Tester tester = new HatFrameworkDev.Tester(Config.browserForm);
await tester.TestBegin();
await tester.GoToUrl("https://mgts.ru/", 5);
await tester.WaitVisibleElementById("headerPartMGTS", 25);
await tester.ClickElementByCSS("#header > div.header_second-row.header_desktop > div > div > div.header_action-btn > button");
await tester.WaitVisibleElementById("popup", 5);
await tester.SetValueInElementByCSS("#popup_name", "Тестирование Зионек");
await tester.Wait(2);
await tester.SetValueInElementByCSS("#popup_phone", "9999999999");
await tester.Wait(2);
await tester.ClickElementById("SUBMIT_ORDER");
await tester.Wait(5);
string order = await tester.GetValueFromElementById("last_order_sended");
await tester.AssertNotEquals(order, "\"\"");
await tester.TestEnd();

await tester.GetAttributeFromElementByTagAsync("a", 0, "href");
await tester.GetAttributeFromElementByCssAsync("#myInput", "placeholder");
List<string> Json_Array = await tester.GetAttributeFromElementsByCssAsync("input", "name"); // в результате ["login","pass","null"]
foreach (string Json_String in Json_Array)
{
	Config.browserForm.consoleMsg(Json_String);
}
		Под капотом
		string result = ""login","pass","null"]";
		result = JsonConvert.DeserializeObject(result).ToString();
		List<string> Json_Array = JsonConvert.DeserializeObject<List<string>>(result);
		foreach (string Json_String in Json_Array)
		{
			ConsoleMsg(Json_String);
		}

await tester.SetAttributeInElementByIdAsync("login", "value", "admin");

-----------------------------------------------------------------------------


https://developer.mozilla.org/ru/docs/Web/API/Document/evaluate
https://developer.mozilla.org/en-US/docs/Web/API/XPathResult
https://developer.mozilla.org/en-US/docs/Web/API/XPathResult/singleNodeValue

var btn = document.evaluate("//*[@id='buttonLogin']", document, null, XPathResult.ANY_TYPE, null);
var btn = document.evaluate("//*[@id='buttonLogin']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
btn.click();
btn.value;
btn.outerHTML;
btn.getAttribute('id');

-----------------------------------------------------------------------------
Запуск из командной строки:
C:\Git\SomovStudio\Hat\App\Hat\Hat\bin\Debug>Hat.exe ExampleTest.cs C:\Users\Catfish\Desktop\project

-----------------------------------------------------------------------------

Класс: HTMLElement
Конструктор
Переменные
Методы

HTMLElement
Id
Name
Class
Type

ClickAsync
GetAttributeAsync
GetHtmlAsync
GetTextAsync
GetValueAsync
ScrollToAsync
SetAttributeAsync
SetHtmlAsync
SetTextAsync
SetValueAsync
WaitNotVisibleAsync
WaitVisibleAsync

-----------------------------------------------------------------------------
Рефакторинг кода

await execute(script, step, $"", $"");

string script = "(function(){  }());";
string value = await execute(script, step, $"", $"");
return value;

try
{

}
catch (Exception ex)
{
	EditMessage(step, null, FAILED, "Произошла ошибка: " + ex.Message + Environment.NewLine + Environment.NewLine + "Полное описание ошибка: " + ex.ToString(), IMAGE_STATUS_FAILED);
	TestStopAsync();
	ConsoleMsgError(ex.ToString());
}

WaitVisibleElementByCssAsync
WaitNotVisibleElementByCssAsync
FindElementByCssAsync
FindVisibleElementByCssAsync
ClickElementByCssAsync
SetValueInElementByCssAsync
GetValueFromElementByCssAsync
SetTextInElementByCssAsync
GetTextFromElementByCssAsync
GetCountElementsByCssAsync
ScrollToElementByCssAsync
GetAttributeFromElementByCssAsync
GetAttributeFromElementsByCssAsync
SetAttributeInElementByCssAsync
SetAttributeInElementsByCssAsync
GetHtmlFromElementByCssAsync
SetHtmlInElementByCssAsync

(string by, string locator)

string script = "(function(){";
if(by == BY_CSS) script += $"var elem = document.querySelector('{locator}');";
else script += $"var element = document.evaluate(\"{locator}\", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;";
script += "}());";


BY_CSS = "BY_CSS";
BY_XPATH = "BY_XPATH";

WaitVisibleElementAsync(string by, string locator, int sec)
WaitNotVisibleElementAsync(string by, string locator, int sec)
FindElementAsync(string by, string locator, int sec)
FindVisibleElementAsync(string by, string locator, int sec)
ClickElementAsync(string by, string locator)
SetValueInElementAsync(string by, string locator, string value)
GetValueFromElementAsync(string by, string locator)
SetTextInElementAsync(string by, string locator, string text)
GetTextFromElementAsync(string by, string locator)
GetCountElementsAsync(string by, string locator)
ScrollToElementAsync(string by, string locator, bool behaviorSmooth = false)
GetAttributeFromElementAsync(string by, string locator, string attribute)
GetAttributeFromElementsAsync(string by, string locator, string attribute)
SetAttributeInElementAsync(string by, string locator, string attribute, string value)
SetAttributeInElementsAsync(string by, string locator, string attribute, string value)
GetHtmlFromElementAsync(string by, string locator)
SetHtmlInElementAsync(string by, string locator, string html)

--------------------------

HatFrameworkDev.Tester tester = new HatFrameworkDev.Tester(Config.browserForm);
tester.ClearMessages();
tester.SendMessage("Запуск автотеста", "", "Файл: ExampleTest.cs", Tester.IMAGE_STATUS_MESSAGE);

await tester.TestBeginAsync();
await tester.GoToUrlAsync("https://somovstudio.github.io/test.html", 5);
await tester.WaitNotVisibleElementAsync(HatFrameworkDev.Tester.BY_CSS, "div[id='result']", 2);
await tester.FindElementAsync(HatFrameworkDev.Tester.BY_CSS, "div[id='result']", 2);
await tester.FindVisibleElementAsync(HatFrameworkDev.Tester.BY_CSS, "#auth #buttonLogin", 2);
await tester.SetValueInElementAsync(HatFrameworkDev.Tester.BY_CSS, "input[id='login']", "admin");
await tester.SetValueInElementAsync(HatFrameworkDev.Tester.BY_CSS, "input[id='pass']", "0000");
string value_css = await tester.GetValueFromElementAsync(HatFrameworkDev.Tester.BY_CSS, "input[id='login']");
tester.ConsoleMsg(value_css);
await tester.SetTextInElementAsync(HatFrameworkDev.Tester.BY_CSS, "#auth > h2", "Тестовый заголовок");
string text_css = await tester.GetTextFromElementAsync(HatFrameworkDev.Tester.BY_CSS, "#auth > h2");
tester.ConsoleMsg(text_css);
int count_css = await tester.GetCountElementsAsync(HatFrameworkDev.Tester.BY_CSS, "input");
tester.ConsoleMsg(count_css.ToString());
string attr_css = await tester.GetAttributeFromElementAsync(HatFrameworkDev.Tester.BY_CSS, "input", "name");
tester.ConsoleMsg(attr_css);
List<string> attrs_css = await tester.GetAttributeFromElementsAsync(HatFrameworkDev.Tester.BY_CSS, "input", "name");
if(attrs_css != null) 
{
	foreach (string attr in attrs_css)
		tester.ConsoleMsg(attr);
}
await tester.SetAttributeInElementAsync(HatFrameworkDev.Tester.BY_CSS, "#auth > h2", "name", "textH1");
await tester.SetAttributeInElementsAsync(HatFrameworkDev.Tester.BY_CSS, "input", "class", "test-class");
string html_css = await tester.GetHtmlFromElementAsync(HatFrameworkDev.Tester.BY_CSS, "#auth > h2");
tester.ConsoleMsg(html_css);
await tester.SetHtmlInElementAsync(HatFrameworkDev.Tester.BY_CSS, "#auth > h2", "<div>Тестовый блок</div>");
await tester.ClickElementAsync(HatFrameworkDev.Tester.BY_CSS, "#auth #buttonLogin");
await tester.WaitVisibleElementAsync(HatFrameworkDev.Tester.BY_CSS, "div[id='result']", 2);
await tester.TestEndAsync();

--------------------------

await tester.TestBeginAsync();
await tester.GoToUrlAsync("https://somovstudio.github.io/test.html", 5);
await tester.WaitNotVisibleElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='result']", 2);
await tester.FindElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='result']", 2);
await tester.FindVisibleElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='auth']//input[@id='buttonLogin']", 2);
await tester.SetValueInElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//input[@id='login']", "admin");
await tester.SetValueInElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//input[@id='pass']", "0000");
string value_xpath = await tester.GetValueFromElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//input[@id='login']");
tester.ConsoleMsg(value_xpath);
await tester.SetTextInElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='auth']//h2", "Тестовый заголовок");
string text_xpath = await tester.GetTextFromElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='auth']//h2");
tester.ConsoleMsg(text_xpath);
int count_xpath = await tester.GetCountElementsAsync(HatFrameworkDev.Tester.BY_XPATH, "//input");
tester.ConsoleMsg(count_xpath.ToString());
string attr_xpath = await tester.GetAttributeFromElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//input", "name");
tester.ConsoleMsg(attr_xpath);
List<string> attrs_xpath = await tester.GetAttributeFromElementsAsync(HatFrameworkDev.Tester.BY_XPATH, "//input", "name");
if(attrs_xpath != null)
{
	foreach (string attr in attrs_xpath)
		tester.ConsoleMsg(attr);
}
await tester.SetAttributeInElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='auth']//h2", "name", "textH1");
await tester.SetAttributeInElementsAsync(HatFrameworkDev.Tester.BY_XPATH, "//input", "class", "test-class");
string html_xpath = await tester.GetHtmlFromElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='auth']//h2");
tester.ConsoleMsg(html_xpath);
await tester.SetHtmlInElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='auth']//h2", "<div>Тестовый блок</div>");
await tester.ClickElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='auth']//input[@id='buttonLogin']");
await tester.WaitVisibleElementAsync(HatFrameworkDev.Tester.BY_XPATH, "//div[@id='result']", 2);
await tester.TestEndAsync();

--------------------------

await tester.TestBeginAsync();
await tester.GoToUrlAsync("https://somovstudio.github.io/", 5);
await tester.ScrollToElementAsync(HatFrameworkDev.Tester.BY_CSS, "body > footer", true);
await tester.GoToUrlAsync("https://somovstudio.github.io/", 5);
await tester.ScrollToElementAsync(HatFrameworkDev.Tester.BY_XPATH, "/html/body/footer", true);
await tester.TestEndAsync();

--------------------------

REST запросы

https://jsonplaceholder.typicode.com/
https://jsonplaceholder.typicode.com/posts
https://jsonplaceholder.typicode.com/posts/1/


HatFrameworkDev.Tester tester = new HatFrameworkDev.Tester(Config.browserForm);
await tester.TestBeginAsync();
await tester.GoToUrlAsync("https://jsonplaceholder.typicode.com", 5);
string result = await tester.RestGetAsync(@"https://jsonplaceholder.typicode.com/posts/1/", "UTF-8");
await tester.AssertNotEqualsAsync("", result);

await tester.GoToUrlAsync("https://somovstudio.github.io/test.html", 5);
string script = @"(function(){ var element = document.getElementsByTagName('h2')[0]; return element.outerText; }());";
string actual = await tester.ExecuteJavaScriptAsync(script);
string expected = "\"Авторизация\"";
await tester.AssertEqualsAsync(expected, actual);

await tester.TestEndAsync();

using (System.IO.FileStream file = System.IO.File.Create("image.jpeg"))
{
	await tester.BrowserView.CoreWebView2.CapturePreviewAsync(
	Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat.Jpeg, file);
}


---------------------------------------------
НАЖАТИЕ КНОПКИ
https://www.codegrepper.com/code-examples/javascript/dispatch+keydown+event+javascript
https://thewebdev.info/2021/02/27/how-to-simulate-a-keypress-event-programmatically-with-javascript/


var btn = document.getElementById('buttonLogin');
btn.dispatchEvent(new KeyboardEvent('keypress', { 'key':'Enter' }));
btn.dispatchEvent(new KeyboardEvent('keydown', {'key':'Enter'} ));
btn.dispatchEvent(new KeyboardEvent('keyup', {'key':'Enter'} ));

var input = document.getElementById('login');
input.dispatchEvent(new KeyboardEvent('keydown', {'key': 'a'}));
input.dispatchEvent(
  new KeyboardEvent("keydown", {
    key: "e",
    keyCode: 69,
    code: "KeyE",
    which: 69,
    shiftKey: false,
    ctrlKey: false,
    metaKey: false
  })
);

---------------------------------------------
ВЫБРАТЬ Option ИЗ Select

var select = document.getElementById('MySelect');
var value = select.options[select.selectedIndex].value;
var text = select.options[select.selectedIndex].text;
select.options[2].selected = 'selected';
select.options[1].selected = true;
for (var i = 0; i < select.options.length; ++i) {
	if (select.options[i].text === _text)
		select.options[i].selected = true;
}

